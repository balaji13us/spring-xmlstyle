package me.bs.java.usermanagement.backend.mapper;

import java.util.List;
import me.bs.java.usermanagement.backend.model.Address;
import me.bs.java.usermanagement.backend.model.AddressCriteria;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;
import org.apache.ibatis.annotations.SelectKey;

public interface AddressMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@SelectProvider(type = AddressSqlProvider.class, method = "countByExample")
	long countByExample(AddressCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@DeleteProvider(type = AddressSqlProvider.class, method = "deleteByExample")
	int deleteByExample(AddressCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@Delete({ "delete from ADDRESS", "where ID = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@Insert({ "insert into ADDRESS (PROXY, IS_PRIMARY, ", "ADDRESS_TYPE, LINE1, ", "LINE2, LINE3, LINE4, ",
			"LINE5, CITY, STATE, ", "ZIP, COUNTRY, PERSON_ID)",
			"values (#{proxy,jdbcType=VARCHAR}, #{isPrimary,jdbcType=VARCHAR}, ",
			"#{addressType,jdbcType=VARCHAR}, #{line1,jdbcType=VARCHAR}, ",
			"#{line2,jdbcType=VARCHAR}, #{line3,jdbcType=VARCHAR}, #{line4,jdbcType=VARCHAR}, ",
			"#{line5,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, ",
			"#{zip,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{personId,jdbcType=BIGINT})" })
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insert(Address record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@InsertProvider(type = AddressSqlProvider.class, method = "insertSelective")
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insertSelective(Address record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@SelectProvider(type = AddressSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "PROXY", property = "proxy", jdbcType = JdbcType.VARCHAR),
			@Result(column = "IS_PRIMARY", property = "isPrimary", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ADDRESS_TYPE", property = "addressType", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE1", property = "line1", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE2", property = "line2", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE3", property = "line3", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE4", property = "line4", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE5", property = "line5", jdbcType = JdbcType.VARCHAR),
			@Result(column = "CITY", property = "city", jdbcType = JdbcType.VARCHAR),
			@Result(column = "STATE", property = "state", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ZIP", property = "zip", jdbcType = JdbcType.VARCHAR),
			@Result(column = "COUNTRY", property = "country", jdbcType = JdbcType.VARCHAR),
			@Result(column = "PERSON_ID", property = "personId", jdbcType = JdbcType.BIGINT) })
	List<Address> selectByExampleWithRowbounds(AddressCriteria example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@SelectProvider(type = AddressSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "PROXY", property = "proxy", jdbcType = JdbcType.VARCHAR),
			@Result(column = "IS_PRIMARY", property = "isPrimary", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ADDRESS_TYPE", property = "addressType", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE1", property = "line1", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE2", property = "line2", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE3", property = "line3", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE4", property = "line4", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE5", property = "line5", jdbcType = JdbcType.VARCHAR),
			@Result(column = "CITY", property = "city", jdbcType = JdbcType.VARCHAR),
			@Result(column = "STATE", property = "state", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ZIP", property = "zip", jdbcType = JdbcType.VARCHAR),
			@Result(column = "COUNTRY", property = "country", jdbcType = JdbcType.VARCHAR),
			@Result(column = "PERSON_ID", property = "personId", jdbcType = JdbcType.BIGINT) })
	List<Address> selectByExample(AddressCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@Select({ "select", "ID, PROXY, IS_PRIMARY, ADDRESS_TYPE, LINE1, LINE2, LINE3, LINE4, LINE5, CITY, ",
			"STATE, ZIP, COUNTRY, PERSON_ID", "from ADDRESS", "where ID = #{id,jdbcType=BIGINT}" })
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "PROXY", property = "proxy", jdbcType = JdbcType.VARCHAR),
			@Result(column = "IS_PRIMARY", property = "isPrimary", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ADDRESS_TYPE", property = "addressType", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE1", property = "line1", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE2", property = "line2", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE3", property = "line3", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE4", property = "line4", jdbcType = JdbcType.VARCHAR),
			@Result(column = "LINE5", property = "line5", jdbcType = JdbcType.VARCHAR),
			@Result(column = "CITY", property = "city", jdbcType = JdbcType.VARCHAR),
			@Result(column = "STATE", property = "state", jdbcType = JdbcType.VARCHAR),
			@Result(column = "ZIP", property = "zip", jdbcType = JdbcType.VARCHAR),
			@Result(column = "COUNTRY", property = "country", jdbcType = JdbcType.VARCHAR),
			@Result(column = "PERSON_ID", property = "personId", jdbcType = JdbcType.BIGINT) })
	Address selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@UpdateProvider(type = AddressSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") Address record, @Param("example") AddressCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@UpdateProvider(type = AddressSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") Address record, @Param("example") AddressCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@UpdateProvider(type = AddressSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(Address record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADDRESS
	 * @mbg.generated  Sat Apr 06 20:22:22 IST 2019
	 */
	@Update({ "update ADDRESS", "set PROXY = #{proxy,jdbcType=VARCHAR},", "IS_PRIMARY = #{isPrimary,jdbcType=VARCHAR},",
			"ADDRESS_TYPE = #{addressType,jdbcType=VARCHAR},", "LINE1 = #{line1,jdbcType=VARCHAR},",
			"LINE2 = #{line2,jdbcType=VARCHAR},", "LINE3 = #{line3,jdbcType=VARCHAR},",
			"LINE4 = #{line4,jdbcType=VARCHAR},", "LINE5 = #{line5,jdbcType=VARCHAR},",
			"CITY = #{city,jdbcType=VARCHAR},", "STATE = #{state,jdbcType=VARCHAR},", "ZIP = #{zip,jdbcType=VARCHAR},",
			"COUNTRY = #{country,jdbcType=VARCHAR},", "PERSON_ID = #{personId,jdbcType=BIGINT}",
			"where ID = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(Address record);
}